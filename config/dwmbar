#!/bin/sh
ethn="enp4s0"
old=""

print_rx() {
        echo "$(cat /proc/net/dev | grep $ethn | sed 's/:/ /g' | awk '{print $2}')"
}

print_tx() {
        echo "$(cat /proc/net/dev | grep $ethn | sed 's/:/ /g' | awk '{print $10}')"
}

print_ft() {
	echo "$(cat /proc/stat | grep "cpu " | awk '{printf "%d", $5+$6}')"
}

print_tt() {
	echo "$(cat /proc/stat | grep "cpu " | awk '{printf "%d", $2+$3+$4+$5+$7+$8+$9+$11}')"
}

print_cpu() {
	free_time_pre=$(echo $old | awk '{print $3}')
	total_time_pre=$(echo $old | awk '{print $4}')

	new="$(print_ft) $(print_tt)"
	free_time_next=$(echo $new | awk '{print $1}')
	total_time_next=$(echo $new | awk '{print $2}')

	cpu=$(echo "scale=2;($free_time_next-$free_time_pre)/($total_time_next-$total_time_pre)" | bc)
	cpu=$(echo "(1-$cpu)*100" | bc | awk -F. '{print $1}')
	echo -e "cpu:$cpu%"
}

print_memory(){
	memfree=$(($(grep -m1 'MemAvailable:' /proc/meminfo | awk '{print $2}') / 1024))
	if [[ $memfree -gt 1024 ]];then
		memfree=$(echo $memfree | awk '{printf "%0.2fG",$1/1024}')
	else
		memfree=$(echo "$(memfree)M")
	fi
	echo -e "ðŸ’¾:$memfree"
}

print_network() {
	RX_pre=$(echo $old | awk '{print $1}')
	TX_pre=$(echo $old | awk '{print $2}')

	new="$(print_rx) $(print_tx)"
	old=$new
	RX_next=$(echo $new | awk '{print $1}')
	TX_next=$(echo $new | awk '{print $2}')

	RX=$((${RX_next}-${RX_pre}))
	TX=$((${TX_next}-${TX_pre}))

	if [[ $RX -gt 1048576 ]];then
		RX=$(echo $RX | awk '{printf "%0.2fMB/s",$1/1048576}')
	else
		RX=$(echo $RX | awk '{printf "%0.2fKB/s",$1/1024}')
	fi

	if [[ $TX -gt 1048576 ]];then
		TX=$(echo $TX | awk '{printf "%0.2fMB/s",$1/1048576}')
	else
		TX=$(echo $TX | awk '{printf "%0.2fKB/s",$1/1024}')
	fi

	echo -e "\u2b07:$RX\u2b06:$TX"
}

print_date() {
	echo -e "\u23f0$(date +'%H:%M')"
}

while true
do
	old="$(print_rx) $(print_tx) $(print_ft) $(print_tt)"
	sleep 1
	CPU=$(print_cpu)
	MEM=$(print_memory)
	NET=$(print_network)
	DATE=$(print_date)
	xsetroot -name "$CPU|$MEM|$NET|$DATE"
done
